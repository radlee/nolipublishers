{"version":3,"sources":["media/ws.png","media/mp.jpg","media/coding.jpg","components/footer/footer.js","components/jumbotron/jumbotron.component.jsx","components/team-list/team-list.component.jsx","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","Row","Col","sm","class","Component","JumbotronHead","Jumbotron","TeamList","props","ListGroup","flush","ListGroupItem","Media","left","object","src","ws","height","alt","body","heading","withRouter","useState","isOpen","setIsOpen","Navbar","dark","extended","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","NavbarText","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1d0658e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ws.14227931.png\";","module.exports = __webpack_public_path__ + \"static/media/mp.9864abd0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coding.2efb6a6d.jpg\";","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nexport default class Footer extends Component {\n\n    render() {\n\n\n        return (\n\n            <div className=\"container\">\n                <Container>\n\n                    <Row>\n                        <Col sm=\"4\"></Col>\n                        <Col sm=\"4\">\n\n                            <hr />\n\n                            <div className=\"twelve columns\">\n                                <div class=\"widget\">\n                                    <h5 className=\"footer-text\">NOLI PUBLISHERS</h5>\n                                </div>\n                            </div>\n\n                            <hr />\n\n                        </Col>\n                        <Col sm=\"4\"></Col>\n                    </Row>\n\n                </Container>\n            </div>\n\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Jumbotron } from 'reactstrap';\n\nexport default class JumbotronHead extends Component {\n  render() {\n    return (\n\n      <div>\n        <Jumbotron className=\"jumbotron\">\n          <p className=\"lead\"><span className=\"green\">Welcome</span> </p>\n          <hr className=\"my-2\" />\n          <h1 className=\"display-3\">NOLI PUBLISHERS</h1>\n          <hr className=\"my-2\" />\n\n        </Jumbotron>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { ListGroup, ListGroupItem, Media } from 'reactstrap';\nimport ws from '../../media/ws.png';\nimport mp from '../../media/mp.jpg';\nimport coding from '../../media/coding.jpg';\n\n\nconst TeamList = (props) => {\n    return (\n        <div className=\"container\">\n            <br />\n            <h1 className=\"h1\">Basic Services</h1>\n            <hr className=\"heading-horizon\" />\n            <br />\n            <ListGroup className=\"team\" flush>\n                <ListGroupItem>\n                    <Media>\n                        <Media className=\"profile-pic\" left>\n                            <Media className=\"Media\" object src={ws} height=\"64px\" alt=\"Siya's Profile Photo\" />\n                        </Media>\n                        <Media body>\n                            <Media heading>\n                                Workshops\n                            </Media>\n                            <h5>Business Lunch Workshops.</h5>\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                            Assumenda omnis dolore amet harum delectus ut, incidunt expedita,\n                            cum modi deserunt porro saepe. Minima perferendis sapiente repellendus necessitatibus, eius enim? Aspernatur.\n                        </Media>\n                    </Media>\n                </ListGroupItem>\n                <ListGroupItem>\n                    <Media>\n                        <Media className=\"profile-pic\" left>\n                            <Media className=\"Media\" object src={ws} height=\"64px\" alt=\"Themba's Profile Photo\" />\n                        </Media>\n                        <Media body>\n                            <Media heading>\n                                Workshops\n                            </Media>\n                            <h5>Business Lunch Workshops.</h5>\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                            Assumenda omnis dolore amet harum delectus ut, incidunt expedita,\n                            cum modi deserunt porro saepe. Minima perferendis sapiente repellendus necessitatibus, eius enim? Aspernatur.\n                        </Media>\n                    </Media>\n                </ListGroupItem>\n                <ListGroupItem>\n                    <Media>\n                        <Media className=\"profile-pic\" left>\n                            <Media className=\"Media\" object src={ws} height=\"64px\" alt=\"Lolito's Profile Photo\" />\n                        </Media>\n                        <Media body>\n                            <Media heading>\n                                Workshops\n                            </Media>\n                            <h5>Business Lunch Workshops.</h5>\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                            Assumenda omnis dolore amet harum delectus ut, incidunt expedita,\n                            cum modi deserunt porro saepe. Minima perferendis sapiente repellendus necessitatibus, eius enim? Aspernatur.\n                        </Media>\n                    </Media>\n                </ListGroupItem>\n            </ListGroup>\n        </div>\n    );\n}\n\nexport default TeamList;","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    NavbarText,\n} from 'reactstrap';\n\nconst Navigation = (props) => {\n\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div className=\"\">\n\n            <Navbar className=\"navigation\" dark extended=\"md\">\n                <NavbarBrand href=\"/\" className=\"a\">NOLI PUBLISHERS</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink className=\"a\" href=\"#about\">About</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"a\" href=\"#objectives\">Objectives</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"a\" href=\"#services\">Services</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"a\" href=\"#orgs\">Organizations</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"a\" href=\"#contact\">Contact</NavLink>\n                        </NavItem>\n                    </Nav>\n                    <NavbarText>NOLI PUBLISHERS</NavbarText>\n                </Collapse>\n            </Navbar>\n\n        </div>\n    )\n\n}\n\nexport default withRouter(Navigation);","import React, { Component } from 'react';\nimport Footer from './components/footer/footer';\nimport JumbotronHead from './components/jumbotron/jumbotron.component';\nimport TeamList from './components/team-list/team-list.component';\nimport './App.css';\nimport Navigation from \"./components/Navigation\"\nimport { Jumbotron } from 'reactstrap';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Jumbotron className=\"jumbotron\">\n          <JumbotronHead />\n          <hr className=\"my-2\" />\n        </Jumbotron>\n        <br />\n        <TeamList />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}